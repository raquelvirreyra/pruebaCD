{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/chevi/Documents/RAQUEL/REPOSITORIOS/HIA/proyfrontendgrupo08/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Chart from 'chart.js/auto';\nimport { Empleado } from 'src/app/models/empleado';\nimport { Oficina } from 'src/app/models/oficina';\nimport { Reunion } from 'src/app/models/reunion';\nimport Swal from 'sweetalert2';\nimport 'sweetalert2/src/sweetalert2.scss';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/reunion.service\";\nimport * as i2 from \"src/app/service/empleado.service\";\nimport * as i3 from \"src/app/service/oficina.service\";\nimport * as i4 from \"src/app/service/usuario.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"../layout/header/header.component\";\nimport * as i7 from \"@angular/forms\";\nexport let EstadisticasComponent = /*#__PURE__*/(() => {\n  class EstadisticasComponent {\n    constructor(reunionService, empleadoService, oficinaService, usuarioService, router) {\n      this.reunionService = reunionService;\n      this.empleadoService = empleadoService;\n      this.oficinaService = oficinaService;\n      this.usuarioService = usuarioService;\n      this.router = router;\n      this.oficinas = [];\n      this.reuniones = [];\n      this.participantes = [];\n      this.mostrar = [];\n      this.mostrarLabel = [];\n\n      if (usuarioService.userLoggedIn() == false) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Acceso denegado',\n          text: 'Por favor inicia sesion.'\n        });\n        router.navigate(['login']);\n      }\n\n      this.mostrar = new Array();\n      this.mostrarLabel = new Array();\n      this.reuniones = new Array();\n      this.reunion = new Reunion();\n      this.participantes = new Array();\n      this.participante = new Empleado();\n      this.oficinas = new Array();\n      this.oficina = new Oficina();\n      this.dateStart = new Date();\n      this.dateEnd = new Date();\n      this.getReuniones();\n      this.getParticipantes();\n      this.getOficinas();\n    }\n\n    ngOnInit() {}\n    /*\r\n    Dibujar la estadistica en Barra\r\n    */\n\n\n    charBarra(datos, mostrar) {\n      if (this.chartBar) {\n        this.chartBar.destroy();\n      }\n\n      this.chartBar = new Chart(\"chartBar\", {\n        type: 'bar',\n        data: {\n          labels: mostrar,\n          datasets: [{\n            label: 'participo en reuniones',\n            data: datos,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        }\n      });\n    }\n    /*\r\n     Dibujar la estadistica en torta\r\n    */\n\n\n    charTorta(datos, mostrar) {\n      if (this.chartPie) {\n        this.chartPie.destroy();\n      }\n\n      this.chartPie = new Chart(\"chartPie\", {\n        type: 'pie',\n        data: {\n          labels: mostrar,\n          datasets: [{\n            label: 'participo en reuniones',\n            data: datos,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            hoverOffset: 4\n          }]\n        }\n      });\n    }\n\n    getOficinas() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.oficinas = new Array();\n\n        _this.oficinaService.getOficinas().subscribe(result => {\n          result.forEach(element => {\n            _this.oficina = new Oficina();\n            Object.assign(_this.oficina, element);\n\n            _this.oficinas.push(_this.oficina);\n          });\n        }, error => {\n          console.log(error);\n        });\n      })();\n    }\n\n    getReuniones() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        _this2.reuniones = new Array();\n\n        _this2.reunionService.gerReuniones().subscribe(result => {\n          result.forEach(element => {\n            _this2.reunion = new Reunion();\n            Object.assign(_this2.reunion, element);\n\n            _this2.reuniones.push(_this2.reunion);\n          });\n        }, error => {\n          console.log(error);\n        });\n      })();\n    }\n\n    getParticipantes() {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        _this3.participantes = new Array();\n\n        _this3.empleadoService.getEmpleados().subscribe(result => {\n          result.forEach(element => {\n            _this3.participante = new Empleado();\n            Object.assign(_this3.participante, element);\n\n            _this3.participantes.push(_this3.participante);\n          });\n        }, error => {\n          console.log(error);\n        });\n      })();\n    }\n\n    participantesChar() {\n      this.mostrar = new Array();\n      this.mostrarLabel = new Array();\n      var index = 0;\n      var c = 0;\n      var b = 0;\n      this.participantes.forEach(element => {\n        this.mostrar[b] = 0;\n        this.mostrarLabel[b] = element.Apellido + \" \" + element.Nombre;\n        b++;\n      });\n      this.reuniones.forEach(element => {\n        element.participantes.forEach(elementt => {\n          this.participantes.forEach(elementtt => {\n            if (elementtt._id == elementt._id) {\n              c++;\n              this.mostrar[index] = this.mostrar[index] + c;\n            }\n\n            index++;\n          });\n          c = 0;\n          index = 0;\n        });\n      });\n      this.charBarra(this.mostrar, this.mostrarLabel);\n      this.charTorta(this.mostrar, this.mostrarLabel);\n    }\n\n    oficinasChar() {\n      this.mostrar = new Array();\n      this.mostrarLabel = new Array();\n      var index = 0;\n      var c = 0;\n      var b = 0;\n      this.oficinas.forEach(element => {\n        this.mostrar[b] = 0;\n        this.mostrarLabel[b] = \"oficina nro: \" + element.numero;\n        b++;\n      });\n      this.reuniones.forEach(element => {\n        this.oficinas.forEach(elementt => {\n          if (element.oficina._id == elementt._id) {\n            c++;\n            this.mostrar[index] = this.mostrar[index] + c;\n          }\n\n          index++;\n        });\n        c = 0;\n        index = 0;\n      });\n      this.charBarra(this.mostrar, this.mostrarLabel);\n      this.charTorta(this.mostrar, this.mostrarLabel);\n    }\n\n    tipoReunionChar() {\n      var arr;\n      arr = [\"Urgente\", \"Alta\", \"Normal\"];\n      this.mostrar = [0, 0, 0];\n      this.mostrarLabel = [\"Urgente: \", \"Alta: \", \"Normal: \"];\n      var index = 0;\n      var c = 0;\n      this.reuniones.forEach(element => {\n        arr.forEach(elementt => {\n          if (element.tipoReunion == elementt) {\n            c++;\n            this.mostrar[index] = this.mostrar[index] + c;\n          }\n\n          index++;\n        });\n        c = 0;\n        index = 0;\n      });\n      this.charBarra(this.mostrar, this.mostrarLabel);\n      this.charTorta(this.mostrar, this.mostrarLabel);\n    }\n\n    mesChar() {\n      var arr;\n      arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n      this.mostrar = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      this.mostrarLabel = [\"Enero: \", \"Febrero: \", \"Marzo: \", \"Abril: \", \"Mayo: \", \"Junio: \", \"Julio: \", \"Agosto: \", \"Septiembre: \", \"Octubre: \", \"Noviembre: \", \"Diciembre: \"];\n      var index = 0;\n      var c = 0;\n      this.reuniones.forEach(element => {\n        arr.forEach(elementt => {\n          if (new Date(element.fecha).getMonth() == elementt) {\n            c++;\n            this.mostrar[new Date(element.fecha).getMonth()] = this.mostrar[new Date(element.fecha).getMonth()] + c;\n          }\n        });\n        c = 0;\n        index = 0;\n      });\n      this.charBarra(this.mostrar, this.mostrarLabel);\n      this.charTorta(this.mostrar, this.mostrarLabel);\n    }\n\n    anioChar() {\n      var array;\n      array = [2020, 2021, 2022, 2023];\n      this.mostrar = [0, 0, 0, 0];\n      this.mostrarLabel = [\"2020: \", \"2021: \", \"2022: \", \"2023: \"];\n      var index = 0;\n      var c = 0;\n      this.reuniones.forEach(element => {\n        array.forEach(elementt => {\n          if (elementt == new Date(element.fecha).getFullYear()) {\n            c++;\n            this.mostrar[index] = this.mostrar[index] + c;\n          }\n\n          index++;\n        });\n        c = 0;\n        index = 0;\n      });\n      this.charBarra(this.mostrar, this.mostrarLabel);\n      this.charTorta(this.mostrar, this.mostrarLabel);\n    }\n\n    periodoChar() {\n      var array;\n      array = [this.dateStart, this.dateStart, this.dateEnd];\n      this.mostrar = [0, 0, 0];\n      this.mostrarLabel = [\"reunion con fecha menor que: \" + this.dateStart, \"reuniones entre: \" + this.dateStart + \"-\" + this.dateEnd, \"reunion con fecha mayor que: \" + this.dateEnd];\n      var index = 0;\n      var c = 0;\n      this.reuniones.forEach(element => {\n        array.forEach(elementt => {\n          if (new Date(elementt).getFullYear() <= new Date(this.dateStart).getFullYear() && new Date(elementt).getMonth() <= new Date(this.dateStart).getMonth() && new Date(elementt).getDay() <= new Date(this.dateStart).getDay()) {\n            c++;\n            this.mostrar[index] = this.mostrar[index] + c;\n          }\n\n          if (new Date(element.fecha).getFullYear() >= new Date(this.dateStart).getFullYear() && new Date(element.fecha).getMonth() >= new Date(this.dateStart).getMonth() && new Date(element.fecha).getDay() >= new Date(this.dateStart).getDay() && new Date(element.fecha).getFullYear <= new Date(this.dateEnd).getFullYear && new Date(element.fecha).getMonth <= new Date(this.dateEnd).getMonth && new Date(element.fecha).getDay <= new Date(this.dateEnd).getDay) {\n            c++;\n            this.mostrar[index] = this.mostrar[index] + c;\n          }\n\n          if (new Date(element.fecha).getFullYear() >= new Date(this.dateEnd).getFullYear() && new Date(element.fecha).getMonth() >= new Date(this.dateEnd).getMonth() && new Date(element.fecha).getDay() >= new Date(this.dateEnd).getDay()) {\n            c++;\n            this.mostrar[index] = this.mostrar[index] + c;\n          }\n\n          index++;\n        });\n        c = 0;\n        index = 0;\n      });\n      console.log(this.mostrar);\n      this.charBarra(this.mostrar, this.mostrarLabel);\n      this.charTorta(this.mostrar, this.mostrarLabel);\n    }\n\n  }\n\n  EstadisticasComponent.ɵfac = function EstadisticasComponent_Factory(t) {\n    return new (t || EstadisticasComponent)(i0.ɵɵdirectiveInject(i1.ReunionService), i0.ɵɵdirectiveInject(i2.EmpleadoService), i0.ɵɵdirectiveInject(i3.OficinaService), i0.ɵɵdirectiveInject(i4.UsuarioService), i0.ɵɵdirectiveInject(i5.Router));\n  };\n\n  EstadisticasComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EstadisticasComponent,\n    selectors: [[\"app-estadisticas\"]],\n    decls: 39,\n    vars: 2,\n    consts: [[1, \"container-fluid\"], [1, \"container-fluid\", \"m-3\"], [1, \"row\", \"justify-content-center\"], [1, \"col-12\", \"col-md-12\"], [1, \"btn\", \"btn-secondary\", \"m-1\", 3, \"click\"], [\"for\", \"dateStart\"], [\"type\", \"date\", \"id\", \"dateStart\", \"name\", \"dateStart\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dateEnd\"], [\"type\", \"date\", \"id\", \"dateEnd\", \"name\", \"dateEnd\", 3, \"ngModel\", \"ngModelChange\"], [1, \"row\", \"mt-4\"], [1, \"col-12\", \"col-md-6\", \"me-4\"], [2, \"height\", \"500px\", \"width\", \"100%\"], [\"id\", \"chartBar\"], [1, \"col-12\", \"col-md-5\"], [\"id\", \"chartPie\"]],\n    template: function EstadisticasComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"app-header\");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"h3\");\n        i0.ɵɵtext(6, \"Graficos Por: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function EstadisticasComponent_Template_button_click_7_listener() {\n          return ctx.participantesChar();\n        });\n        i0.ɵɵtext(8, \"Por Participante\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function EstadisticasComponent_Template_button_click_9_listener() {\n          return ctx.oficinasChar();\n        });\n        i0.ɵɵtext(10, \"Por Oficina\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function EstadisticasComponent_Template_button_click_11_listener() {\n          return ctx.tipoReunionChar();\n        });\n        i0.ɵɵtext(12, \"Por Tipo de Reunion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function EstadisticasComponent_Template_button_click_13_listener() {\n          return ctx.mesChar();\n        });\n        i0.ɵɵtext(14, \"Por Mes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function EstadisticasComponent_Template_button_click_15_listener() {\n          return ctx.anioChar();\n        });\n        i0.ɵɵtext(16, \"Por A\\u00F1o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function EstadisticasComponent_Template_button_click_17_listener() {\n          return ctx.periodoChar();\n        });\n        i0.ɵɵtext(18, \"Por Periodo de Tiempo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"label\", 5);\n        i0.ɵɵtext(20, \"desde\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function EstadisticasComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.dateStart = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"label\", 7);\n        i0.ɵɵtext(23, \"Hasta\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function EstadisticasComponent_Template_input_ngModelChange_24_listener($event) {\n          return ctx.dateEnd = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 9);\n        i0.ɵɵelementStart(26, \"div\", 10);\n        i0.ɵɵelementStart(27, \"h3\");\n        i0.ɵɵtext(28, \"Grafico de Barra\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 11);\n        i0.ɵɵelement(30, \"canvas\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 13);\n        i0.ɵɵelementStart(32, \"h3\");\n        i0.ɵɵtext(33, \"Grafico de Torta\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 11);\n        i0.ɵɵelement(35, \"canvas\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"br\");\n        i0.ɵɵelement(37, \"br\");\n        i0.ɵɵelement(38, \"br\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"ngModel\", ctx.dateStart);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.dateEnd);\n      }\n    },\n    directives: [i6.HeaderComponent, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgModel],\n    styles: [\"\"]\n  });\n  return EstadisticasComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}