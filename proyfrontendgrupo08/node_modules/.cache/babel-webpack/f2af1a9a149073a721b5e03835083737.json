{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ReunionService = /*#__PURE__*/(() => {\n  class ReunionService {\n    constructor(_http) {\n      this._http = _http;\n      this.hostBase = \"http://localhost:3000/api/reunion/\";\n    }\n\n    addReunion(reunion) {\n      const httpOption = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        }),\n        params: new HttpParams({})\n      };\n      return this._http.post(this.hostBase, {\n        titulo: reunion.titulo,\n        fecha: reunion.fecha,\n        horaInicio: reunion.horaInicio,\n        horaFin: reunion.horaFin,\n        oficina: reunion.oficina,\n        estadoReunion: reunion.estadoReunion,\n        tipoReunion: reunion.tipoReunion,\n        recursos: reunion.recursos,\n        participantes: reunion.participantes\n      }, httpOption);\n    }\n\n    gerReuniones() {\n      const httpOption = {\n        headers: new HttpHeaders({})\n      };\n      return this._http.get(this.hostBase, httpOption);\n    }\n\n    gerReunionesTitulo(buscar) {\n      const httpOption = {\n        headers: new HttpHeaders({})\n      };\n      return this._http.get(this.hostBase + \"buscado/\" + buscar, httpOption);\n    }\n\n    getReunionesFiltro(p1, p2, p3) {\n      const httpOption = {\n        headers: new HttpHeaders({})\n      };\n      return this._http.get(this.hostBase + \"/filtro/\" + p1 + \"/\" + p2 + \"/\" + p3, httpOption);\n    }\n\n    deleteReunion(_id) {\n      const httpOptions = {\n        header: new HttpHeaders({}),\n        params: new HttpParams({})\n      };\n      return this._http.delete(this.hostBase + _id, httpOptions);\n    }\n\n    updateReunion(reunion) {\n      const httpOptions = {\n        header: new HttpHeaders({\n          'Content-Type': 'application/json'\n        }),\n        params: new HttpParams({})\n      };\n      return this._http.put(this.hostBase + reunion._id, {\n        _id: reunion._id,\n        fecha: reunion.fecha,\n        horaInicio: reunion.horaInicio,\n        horaFin: reunion.horaFin,\n        oficina: reunion.oficina,\n        recursos: reunion.recursos,\n        tipoReunion: reunion.tipoReunion,\n        estadoReunion: reunion.estadoReunion,\n        participantes: reunion.participantes\n      }, httpOptions);\n    }\n\n    getReunion(_id) {\n      const httpOptions = {\n        header: new HttpHeaders({}),\n        params: new HttpParams({})\n      };\n      return this._http.get(this.hostBase + _id, httpOptions);\n    }\n\n    enviarCorreo(asunto, email, mensaje) {\n      const httpOption = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded'\n        })\n      };\n      const body = new HttpParams().set('asunto', asunto).set('email', email).set('mensaje', mensaje);\n      return this._http.post(\"http://localhost:3000/api/correo\", body, httpOption);\n    }\n\n  }\n\n  ReunionService.ɵfac = function ReunionService_Factory(t) {\n    return new (t || ReunionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ReunionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ReunionService,\n    factory: ReunionService.ɵfac,\n    providedIn: 'root'\n  });\n  return ReunionService;\n})();","map":null,"metadata":{},"sourceType":"module"}